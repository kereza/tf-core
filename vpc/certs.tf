
/*
This setup is just for Development purposes and VPN connection. It should not be used in PRODuction ENV
The private key generated by this resource will be stored unencrypted in your Terraform state file. Use of this resource for production deployments is not recommended. 
Instead, generate a private key file outside of Terraform and distribute it securely to the system where Terraform will be run.
*/


# Server
resource "tls_private_key" "server_side_vpn" {
  algorithm = "RSA"
  rsa_bits  = "2048"
}

resource "tls_self_signed_cert" "server_side_vpn" {
  key_algorithm      = "RSA"
  private_key_pem    = tls_private_key.server_side_vpn.private_key_pem
  is_ca_certificate  = true
  set_subject_key_id = false

  subject {
    common_name  = "kerezov-${var.env}.org"
    organization = "Kerezov-${var.env} Test Organization"
  }

  validity_period_hours = 17520

  allowed_uses = [
    "key_encipherment",
    "digital_signature",
    "server_auth",
    "cert_signing",
    "client_auth",
    "ipsec_end_system",
    "ipsec_tunnel",
    "ipsec_user"
  ]
}

resource "aws_acm_certificate" "server_side_vpn" {
  private_key      = tls_private_key.server_side_vpn.private_key_pem
  certificate_body = tls_self_signed_cert.server_side_vpn.cert_pem
  tags             = { Name = "server-${var.env}" }
}

# CLIENT

resource "tls_private_key" "client_side_vpn" {
  algorithm = "RSA"
  rsa_bits  = "2048"
}

resource "tls_cert_request" "client_side_vpn" {
  key_algorithm   = "RSA"
  private_key_pem = tls_private_key.client_side_vpn.private_key_pem

  subject {
    common_name  = "Kerezov-${var.env} Client VPN"
    organization = "Kerezov-${var.env} Personal"
  }
}

resource "tls_locally_signed_cert" "client_side_vpn" {
  cert_request_pem   = tls_cert_request.client_side_vpn.cert_request_pem
  ca_key_algorithm   = "RSA"
  ca_private_key_pem = tls_private_key.server_side_vpn.private_key_pem
  ca_cert_pem        = tls_self_signed_cert.server_side_vpn.cert_pem

  validity_period_hours = 1000

  allowed_uses = [
    "key_encipherment",
    "digital_signature",
    "server_auth",
    "cert_signing",
    "client_auth",
    "ipsec_end_system",
    "ipsec_tunnel",
    "ipsec_user"
  ]
}

resource "aws_acm_certificate" "client_side_vpn" {
  private_key       = tls_private_key.client_side_vpn.private_key_pem
  certificate_body  = tls_locally_signed_cert.client_side_vpn.cert_pem
  certificate_chain = tls_self_signed_cert.server_side_vpn.cert_pem
  tags              = { Name = "client-${var.env}" }
}